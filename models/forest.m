%森林火灾模拟

n=300;%模拟地图的边长，即元胞的个数
Plight=.00005;Pgrowth=.01;%Plight是闪电概率，Pgrowth是生长概率
UL=[n,1:n-1];DR=[2:n,1];%DR=down-right UL=up-left
veg=zeros(n,n);%代表森林的状态，某个元胞的值如果为0，1，2，分别代表空地，正在燃烧和完好的树
imh=image(cat(3,veg,veg,veg));%显示初始的状态
set(imh, 'erasemode', 'none')%设置显示的属性，这里的意思是不要擦除已经生成的结果
axis equal%使得所有坐标轴的单位统一
axis tight%只显示有图像的部分，其他的部分不显示

for i=1:3000
	sum=(veg(UL,:)==1) +...
	(veg(:,UL)==1)	+  (veg(:,DR)==1)  +...
	(veg(DR,:)==1);%将四个矩阵加起来，就是每一棵树周围着火树木的数量
	veg=2*(veg==2)-...%如果前一时刻是完好的树，下一时刻还是树，(veg==2)的值就为1，2*(veg==2)就还原了原来的值;如果前一时刻是空地或者燃烧的树，下一时刻都变成空地，(veg==2)的值为0
	((veg==2)&(sum>0|rand(n,n)<Plight))+...%如果前一时刻是完好的树，但如果周围只要有树燃烧，或者被雷劈中，那么自身的值减1，即2-1=1，进入燃烧状态
	2*((veg==0)&rand(n,n)<Pgrowth);%如果前一时刻是空地，如果符合生长条件，自身的值就变成2，即0+2=0
	set(imh, 'cdata',cat(3,(veg==1),(veg==2),zeros(n,n)))
    %设置imh值，表达当前的森林状态
    %注意：image函数可以画以红绿蓝(RGB)三基色为基础的图。在这里，(veg==1)表示燃烧的树，属于第一位，因此是红色的；（veg
    %==2）表示完好的树，属于第二位，因此是绿色的，第三位因为是zeros(n,n),都是零，因此是黑色的，以此作为背景。
    %image这个函数是用RGB三种颜色表示图像的，所用的值不能大于1。三个矩阵分别代表RGB，编码如下：000黑色，001蓝色，010
    %绿色，011浅蓝，100红色，101粉红，110黄色，111白色
	drawnow
    %显示Image的结果，即将图画出来
end